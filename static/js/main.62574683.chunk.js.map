{"version":3,"sources":["data.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Cart","props","state","useSelector","dispatch","useDispatch","console","log","reducer","Table","responsive","map","a","i","name","quan","onClick","type","데이터","alert열렸니","className","Detail","lazy","재고context","React","createContext","Card","useContext","history","useHistory","push","shoes","src","width","Test","재고","App","useState","inventory","shoes변경","재고변경","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Button","variant","Provider","value","axios","post","pw","then","get","result","data","catch","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","액션","found","findIndex","payload아무렇게나","copy","reducer2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62574683.chunk.js","sourcesContent":["/* eslint-disable */\r\n\r\nexport default [    \r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    }\r\n  ] \r\n\r\n\r\n\r\n","/*eslint-disable*/\r\n\r\nimport React from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction Cart(props){\r\n\r\n    let state = useSelector( (state) => state)\r\n\r\n    // let state = useSelector( (state) => state.reducer)  뭐 이런식\r\n    // 위에 방법이 더 쉽게 모든 redux 불러오는법. 신문법임. 이걸쓰면 props.xxx 이런식으로 안해도댐 //\r\n\r\n    let dispatch = useDispatch()\r\n\r\n    console.log(state.reducer)\r\n\r\n    return(\r\n        <div>\r\n            <Table responsive>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>상품명</th>\r\n                    <th>수량</th>\r\n                    <th>변경</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                    // props.state.map(function(a,i){\r\n                    state.reducer.map(function(a,i){\r\n                    return(\r\n                    <tr key={i}>\r\n                        <td>{ a.id} </td>  \r\n                        <td>{ a.name }</td>\r\n                        <td>{ a.quan }</td>\r\n                        <td>\r\n                            {/* <button onClick={()=>{ props.dispatch({type: '수량증가'}) }}> + </button > */}\r\n\r\n                            <button onClick={()=>{ dispatch({type: '수량증가', 데이터:a.id}) }}> + </button >\r\n                            \r\n                            {/* <button onClick={()=>{ props.dispatch({type: '수량감소'}) }}> - </button> */}\r\n\r\n                            <button onClick={()=>{ dispatch({type: '수량감소', 데이터: a.id}) }}> - </button >\r\n\r\n\r\n                        </td>\r\n\r\n\r\n\r\n                    </tr>\r\n                    )\r\n                    })\r\n                    }\r\n                    \r\n                \r\n                </tbody>\r\n            </Table>\r\n\r\n    { props.alert열렸니 === true\r\n    ? (<div className='my-alert2'>\r\n            <p>지금 구매하시면 신규할인</p>\r\n            <button onClick={ ()=> { props.dispatch( {type:'alert닫기'} ) } }>닫기</button>\r\n        </div>)\r\n    : null\r\n    }\r\n\r\n\r\n        {/* closing line */}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// function state를props화(store모든데이터들){\r\n//     return {\r\n//         // 상품명 : state[0].name\r\n//         // state : store모든데이터들\r\n//         state : store모든데이터들.reducer,\r\n//         alert열렸니 : store모든데이터들.reducer2\r\n\r\n//         // ↑차라리 모든 스테이트를 스테이트로 쓰겠습니다 //\r\n//     }\r\n// }\r\n\r\n// export default connect(state를props화)(Cart)\r\nexport default Cart;","/* eslint-disable */\n\nimport React, { useState, useContext, Suspense, lazy } from 'react';\nimport { Navbar, Container, Nav, NavDropdown, Jumbotron, Button } from 'react-bootstrap';\nimport { useHistory, useParams } from 'react-router-dom';\nimport './App.css';\nimport inventory from './data.js'; \n// import Detail from './Detail.js';\nlet Detail = lazy( ()=>{ return import('./Detail.js') });\n\n// ↓ npm install axios //\nimport axios from 'axios';\nimport Cart from './Cart.js';\n\n//routing 하는\n\nimport { Link, Route, Switch } from 'react-router-dom';\n\nexport let 재고context = React.createContext();\n\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(inventory);\n  let [재고, 재고변경] = useState([10,11,12]);\n\n  return (\n    <div className=\"App\">\n      \n      <Navbar bg=\"light\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand href=\"#home\">Shoe Shop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to='/detail/0'>Detail</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n\n\n\n<Switch>\n    <Route exact path=\"/\">\n      <div className=\"background\" id='jumbotron'>\n        <h1>20% Season Off</h1>\n        <p> This is a simple Jumbotron example. </p>\n        <p> <Button variant=\"primary\"> Learn More </Button> </p>\n      </div>\n      <div className='container'>\n\n      <재고context.Provider value={재고}>\n        <div className='row'>\n            {\n            shoes.map(function(a,i){\n              return <Card shoes={shoes[i]} i={i} key={i} ></Card>\n            })\n          }\n        </div>\n      </재고context.Provider>\n\n\n        {/* 세줄씩 더 나오게 해던거 ↓ */}\n      <button className=\"btn btn-primary\" onClick={()=>{\n        // 로딩중이라는 UI 띄움 해봐\n        axios.post('서버URL', {id:'codingapple', pw:1234}).then();\n        axios.get('https://codingapple1.github.io/shop/data2.json')\n        .then((result)=>{\n          // 로딩중이라는 UI 안보이게 처리\n          shoes변경([...shoes, ...result.data])\n        })\n        // ajax 불러오기 가 성공햇을때 ↑\n        .catch(()=>{\n          // 로딩중이라는 UI 안보이게 처리\n          console.log('실패햇으요')\n        })\n        // ajax 불러오기 가 실패햇을때 ↑\n      }}>더보기</button>\n      </div>\n    </Route>\n    \n    \n\n    <Route path=\"/detail/:id\">\n      <재고context.Provider value={재고}>\n        <Suspense fallback={<div>로딩중입니다</div>}>\n          <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}/>\n        </Suspense>\n      </재고context.Provider>\n    </Route>\n\n    <Route path='/cart'>\n      <Cart></Cart>\n    </Route>\n    \n</Switch>\n   \n\n\n\n{/* app div closing  */}\n    </div>\n  );\n}\n\n\n\nfunction Card(props){\n  \n  let 재고 = useContext(재고context);\n  let history = useHistory();\n\n  return(\n    <div className='col-md-4' onClick={()=>{ history.push('/detail/' + props.shoes.id) }}>\n      <img src={\"https://codingapple1.github.io/shop/shoes\" + (props.i+1) + \".jpg\"} width='100%'/>\n      <h4>{ props.shoes.title }</h4>\n      <p>{ props.shoes.content } </p>\n      <p>{ props.shoes.price }</p>\n      <Test></Test>\n    </div>\n  )\n}\n\nfunction Test(){\n  let 재고 = useContext(재고context);\n\n  return (\n    <p>{재고[0]}</p>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\n//아래는 리덕스 설치는 npm install redux react-redux // \nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\n\n// let store = createStore(()=>{ \n//   return [\n//   { id : 0, name : '멋진신발', quan : 2},\n//   { id : 1, name : '예쁜신발', quan : 5},\n//   { id : 2, name : '귀여운신발', quan : 1},\n//   { id : 3, name : '은교신발', quan : 3}\n//   ]\n// });\n\nlet alert초기값 = true;\n\nfunction reducer2(state=alert초기값, 액션){\n if(액션.type === 'alert닫기'){\n    state = false;\n    return state;\n  }else{\n  return state\n  }\n}\n\nlet 초기값 =[\n  // { id : 10, name : '멋진신발', quan : 2},\n  // { id : 11, name : '예쁜신발', quan : 5},\n  // { id : 12, name : '귀여운신발', quan : 1},\n  // { id : 13, name : '은교신발', quan : 3}\n  ];\n\n\n\n// 기본 state - default  ↓ paramater 라는 새로운 문법//\nfunction reducer(state = 초기값, 액션){\n  if (액션.type === '항목추가') {\n    \n    let found = state.findIndex( (a)=>{ return a.id === 액션.payload아무렇게나.id} )\n    \n    if( found >=0){\n      let copy = [...state];\n      copy[found].quan++;\n      return copy\n    } else {\n      let copy = [...state];\n      copy.push(액션.payload아무렇게나);\n      return copy\n    }\n  }\n  \n  else if( 액션.type === '수량증가'){\n    let copy = [...state];\n    copy[액션.데이터].quan++;\n    return copy\n  }\n  else if( 액션.type === '수량감소'){\n    let copy = [...state];\n      if (copy[액션.데이터].quan>0){\n        copy[액션.데이터].quan--;\n      }\n    return copy\n\n  }\n  else {\n    return state\n  }\n}\n\n\n\n  \n  \n// let store = createStore(reducer) 여러개 할경우는 아래처럼\nlet store = createStore(combineReducers({reducer, reducer2}))\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}